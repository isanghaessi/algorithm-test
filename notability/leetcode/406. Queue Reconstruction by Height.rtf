{\rtf1\ansi
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc0\levelnfcn0{\*\levelmarker \{decimal\}.}{\leveltext \'02\'00.}{\levelnumbers\'01;}\fi-500\li0\lin0}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc3\levelnfcn3{\*\levelmarker \{upper-alpha\}.}{\leveltext \'02\'01.}{\levelnumbers\'01;}\fi-500\li500\lin500}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc4\levelnfcn4{\*\levelmarker \{lower-alpha\}.}{\leveltext \'02\'02.}{\levelnumbers\'01;}\fi-500\li1000\lin1000}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc0\levelnfcn0{\*\levelmarker \{decimal\}.}{\leveltext \'02\'03.}{\levelnumbers\'01;}\fi-500\li1500\lin1500}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc3\levelnfcn3{\*\levelmarker \{upper-alpha\}.}{\leveltext \'02\'04.}{\levelnumbers\'01;}\fi-500\li2000\lin2000}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc4\levelnfcn4{\*\levelmarker \{lower-alpha\}.}{\leveltext \'02\'05.}{\levelnumbers\'01;}\fi-500\li2500\lin2500}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc0\levelnfcn0{\*\levelmarker \{decimal\}.}{\leveltext \'02\'06.}{\levelnumbers\'01;}\fi-500\li3000\lin3000}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc3\levelnfcn3{\*\levelmarker \{upper-alpha\}.}{\leveltext \'02\'07.}{\levelnumbers\'01;}\fi-500\li3500\lin3500}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc4\levelnfcn4{\*\levelmarker \{lower-alpha\}.}{\leveltext \'02\'08.}{\levelnumbers\'01;}\fi-500\li4000\lin4000}
{\listname ;}\listid-1032666483}
}
{\*\listoverridetable{\listoverride\listid-1032666483\listoverridecount0\ls-1032666483}}
\f0\fs24 \cf0 \pard\tx0\tx500\tx1000\tx1500\tx2000\tx2500\tx3000\tx3500\tx4000\tx4500\tx5000\tx5500\tx6000\ql\fi0\li0
\uc0\u50668 \uc0\u47084 \uc0\u47749 \uc0\u51032  \uc0\u49324 \uc0\u46988 \uc0\u46308 \uc0\u51060  \uc0\u51460 \uc0\u51012  \uc0\u49436  \uc0\u51080 \uc0\u45796 . \uc0\u44033 \uc0\u44033 \uc0\u51032  \uc0\u49324 \uc0\u46988 \uc0\u51008  (h, k)\uc0\u51032  \uc0\u46160  \uc0\u51221 \uc0\u49688  \uc0\u49933 \uc0\u51012  \uc0\u44057 \uc0\u45716 \uc0\u45936 , h\uc0\u45716  \uc0\u44536  \uc0\u49324 \uc0\u46988 \uc0\u51032  \uc0\u53412 , k\uc0\u45716  \uc0\u50526 \uc0\u50640  \uc0\u51460  \uc0\u49436  \uc0\u51080 \uc0\u45716  \uc0\u49324 \uc0\u46988 \uc0\u46308  \uc0\u51473  \uc0\u51088 \uc0\u49888 \uc0\u51032  \uc0\u53412  \uc0\u51060 \uc0\u49345 \uc0\u51064  \uc0\u49324 \uc0\u46988 \uc0\u46308 \uc0\u51032  \uc0\u49688 \uc0\u47484  \uc0\u46907 \uc0\u54620 \uc0\u45796 . \uc0\u51060  \uc0\u44050 \uc0\u51060  \uc0\u50732 \uc0\u48148 \uc0\u47476 \uc0\u46020 \uc0\u47197  \uc0\u51460 \uc0\u51012  \uc0\u51116 \uc0\u51221 \uc0\u47148 \uc0\u54616 \uc0\u45716  \uc0\u50508 \uc0\u44256 \uc0\u47532 \uc0\u51608 \uc0\u51012  \uc0\u51089 \uc0\u49457 \uc0\u54616 \uc0\u46972 .\
\
Input: people = [[7,0],[4,4],[7,1],[5,0],[6,1],[5,2]]\
Output: [[5,0],[7,0],[5,2],[6,1],[4,4],[7,1]]\
Explanation:\
Person 0 has height 5 with no other people taller or the same height in front.\
Person 1 has height 7 with no other people taller or the same height in front.\
Person 2 has height 5 with two persons taller or the same height in front, which is person 0 and 1.\
Person 3 has height 6 with one person taller or the same height in front, which is person 1.\
Person 4 has height 4 with four people taller or the same height in front, which are people 0, 1, 2, and 3.\
Person 5 has height 7 with one person taller or the same height in front, which is person 1.\
Hence [[5,0],[7,0],[5,2],[6,1],[4,4],[7,1]] is the reconstructed queue.\
\
\pard\tx0\tx500\tx1000\tx1500\tx2000\tx2500\tx3000\tx3500\tx4000\tx4500\tx5000\tx5500\tx6000\ql\fi-1000\li1000
\ls-1032666483\ilvl0{\listtext    1.  }\uc0\u50864 \uc0\u49440 \uc0\u49692 \uc0\u50948  \uc0\u53328  \uc0\u44536 \uc0\u47532 \uc0\u46356 \
\pard\tx0\tx500\tx1000\tx1500\tx2000\tx2500\tx3000\tx3500\tx4000\tx4500\tx5000\tx5500\tx6000\ql\fi0\li0
import heapq\
\
class Solution:\
    def reconstructQueue(self, people: List[List[int]]) -> List[List[int]]:\
        heap = []\
        for person in people:\
            heapq.heappush(heap, [-person[0], person[1]])\
        answer = []\
        while heap:\
            person = heapq.heappop(heap)\
            answer.insert(person[1], [-person[0], person[1]])\
            \
        return answer\
\
class Solution:\
    def reconstructQueue(self, people: List[List[int]]) -> List[List[int]]:\
        answer = []\
        people.sort(key = lambda a: (a[0], -a[1]))\
        while len(people) > 0:\
            height, taller = people.pop()\
            count = 0\
            index = 0\
            for i, a in enumerate(answer):\
                if count >= taller:\
                    \
                    break\
                if a[0] >= height:\
                    count += 1\
                    index = i + 1\
            answer.insert(index, [height, taller])\
        \
        return answer\
           \
class Solution:\
    def reconstructQueue(self, people: List[List[int]]) -> List[List[int]]:\
        answer = []\
        people.sort(key = lambda a: (a[0], -a[1]), reverse = True)\
        for height, taller in people:\
            answer.insert(taller, [height, taller])\
        \
        return answer\
             }