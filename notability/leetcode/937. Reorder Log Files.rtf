{\rtf1\ansi
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc0\levelnfcn0{\*\levelmarker \{decimal\}.}{\leveltext \'02\'00.}{\levelnumbers\'01;}\fi-500\li0\lin0}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc3\levelnfcn3{\*\levelmarker \{upper-alpha\}.}{\leveltext \'02\'01.}{\levelnumbers\'01;}\fi-500\li500\lin500}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc4\levelnfcn4{\*\levelmarker \{lower-alpha\}.}{\leveltext \'02\'02.}{\levelnumbers\'01;}\fi-500\li1000\lin1000}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc0\levelnfcn0{\*\levelmarker \{decimal\}.}{\leveltext \'02\'03.}{\levelnumbers\'01;}\fi-500\li1500\lin1500}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc3\levelnfcn3{\*\levelmarker \{upper-alpha\}.}{\leveltext \'02\'04.}{\levelnumbers\'01;}\fi-500\li2000\lin2000}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc4\levelnfcn4{\*\levelmarker \{lower-alpha\}.}{\leveltext \'02\'05.}{\levelnumbers\'01;}\fi-500\li2500\lin2500}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc0\levelnfcn0{\*\levelmarker \{decimal\}.}{\leveltext \'02\'06.}{\levelnumbers\'01;}\fi-500\li3000\lin3000}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc3\levelnfcn3{\*\levelmarker \{upper-alpha\}.}{\leveltext \'02\'07.}{\levelnumbers\'01;}\fi-500\li3500\lin3500}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc4\levelnfcn4{\*\levelmarker \{lower-alpha\}.}{\leveltext \'02\'08.}{\levelnumbers\'01;}\fi-500\li4000\lin4000}
{\listname ;}\listid-1145145045}
}
{\*\listoverridetable{\listoverride\listid-1145145045\listoverridecount0\ls-1145145045}}
\f0\fs24 \cf0 \pard\tx0\tx500\tx1000\tx1500\tx2000\tx2500\tx3000\tx3500\tx4000\tx4500\tx5000\tx5500\tx6000\ql\fi0\li0
\uc0\u47196 \uc0\u44536 \uc0\u47484  \uc0\u51116 \uc0\u51221 \uc0\u47148 \uc0\u54616 \uc0\u46972 . \uc0\u44592 \uc0\u51456 \uc0\u51008  \uc0\u45796 \uc0\u51020 \uc0\u44284  \uc0\u44057 \uc0\u45796 .\
\pard\tx0\tx500\tx1000\tx1500\tx2000\tx2500\tx3000\tx3500\tx4000\tx4500\tx5000\tx5500\tx6000\ql\fi-1000\li1000
\ls-1145145045\ilvl0{\listtext    1.  }\uc0\u47196 \uc0\u44536 \uc0\u51032  \uc0\u44032 \uc0\u51109  \uc0\u50526  \uc0\u48512 \uc0\u48516 \uc0\u51008  \uc0\u49885 \uc0\u48324 \uc0\u51088 \uc0\u45796 .\
\ls-1145145045\ilvl0{\listtext    2.  }\uc0\u47928 \uc0\u51088 \uc0\u47196  \uc0\u44396 \uc0\u49457 \uc0\u46108  \uc0\u47196 \uc0\u44536 \uc0\u44032  \uc0\u49707 \uc0\u51088  \uc0\u47196 \uc0\u44536 \uc0\u48372 \uc0\u45796  \uc0\u50526 \uc0\u50640  \uc0\u50728 \uc0\u45796 .\
\ls-1145145045\ilvl0{\listtext    3.  }\uc0\u49885 \uc0\u48324 \uc0\u51088 \uc0\u45716  \uc0\u49692 \uc0\u49436 \uc0\u50640  \uc0\u50689 \uc0\u54693 \uc0\u51012  \uc0\u45180 \uc0\u52824 \uc0\u51648  \uc0\u50506 \uc0\u51648 \uc0\u47564 , \uc0\u47928 \uc0\u51088 \uc0\u44032  \uc0\u46041 \uc0\u51068 \uc0\u54624  \uc0\u44221 \uc0\u50864  \uc0\u49885 \uc0\u48324 \uc0\u51088  \uc0\u49692 \uc0\u51004 \uc0\u47196  \uc0\u54620 \uc0\u45796 .\
\ls-1145145045\ilvl0{\listtext    4.  }\uc0\u49707 \uc0\u51088  \uc0\u47196 \uc0\u44536 \uc0\u45716  \uc0\u51077 \uc0\u47141  \uc0\u49692 \uc0\u49436 \uc0\u45824 \uc0\u47196  \uc0\u54620 \uc0\u45796 .\
\pard\tx0\tx500\tx1000\tx1500\tx2000\tx2500\tx3000\tx3500\tx4000\tx4500\tx5000\tx5500\tx6000\ql\fi0\li0
\
Input = ["a1 9 2 3 1","g1 act car","zo4 4 7","ab1 off key dog","a8 act zoo"]\
Output = ["g1 act car","a8 act zoo","ab1 off key dog","a1 9 2 3 1","zo4 4 7"]\
\
1.\uc0\u46988 \uc0\u45796 \uc0\u50752  + \uc0\u50672 \uc0\u49328 \uc0\u51088  \uc0\u54876 \uc0\u50857 \
def reorderLogFiles(logs: List[str]) -> List[str]:\
    letters, digits = []\
    for log in logs:\
        if log.split()[1].isdigit():\
            digits.append(log)\
        else:\
            letters.append(log)\
    letters.sort(key=lambda x: (x.split()[1:], x.split()[0]))\
    return letters + digits\
\
class Solution:\
    def reorderLogFiles(self, logs: List[str]) -> List[str]:\
        digit_logs = list(filter(lambda a: a.split()[1].isdigit(), logs))\
        letter_logs = list(filter(lambda a: a not in digit_logs, logs))\
        letter_logs.sort(key = lambda a: (' '.join(a.split()[1:]), a.split()[0]))\
        return [*letter_logs, *digit_logs]\
\
\
\
\
\
}