{\rtf1\ansi
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc23\levelnfcn23{\*\levelmarker \{disc\}}{\leveltext \'01\'95}{\levelnumbers;}\fi-500\li0\lin0}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc23\levelnfcn23{\*\levelmarker \{circle\}}{\leveltext \'01\uc0\u9702 _;}{\levelnumbers;}\fi-500\li500\lin500}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc23\levelnfcn23{\*\levelmarker \{diamond\}}{\leveltext \'01\uc0\u9656 _;}{\levelnumbers;}\fi-500\li1000\lin1000}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc23\levelnfcn23{\*\levelmarker \{disc\}}{\leveltext \'01\'95}{\levelnumbers;}\fi-500\li1500\lin1500}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc23\levelnfcn23{\*\levelmarker \{circle\}}{\leveltext \'01\uc0\u9702 _;}{\levelnumbers;}\fi-500\li2000\lin2000}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc23\levelnfcn23{\*\levelmarker \{diamond\}}{\leveltext \'01\uc0\u9656 _;}{\levelnumbers;}\fi-500\li2500\lin2500}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc23\levelnfcn23{\*\levelmarker \{disc\}}{\leveltext \'01\'95}{\levelnumbers;}\fi-500\li3000\lin3000}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc23\levelnfcn23{\*\levelmarker \{circle\}}{\leveltext \'01\uc0\u9702 _;}{\levelnumbers;}\fi-500\li3500\lin3500}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc23\levelnfcn23{\*\levelmarker \{diamond\}}{\leveltext \'01\uc0\u9656 _;}{\levelnumbers;}\fi-500\li4000\lin4000}
{\listname ;}\listid683032009}
}
{\*\listoverridetable{\listoverride\listid683032009\listoverridecount0\ls683032009}}
\f0\fs24 \cf0 \pard\tx0\tx500\tx1000\tx1500\tx2000\tx2500\tx3000\tx3500\tx4000\tx4500\tx5000\tx5500\tx6000\ql\fi0\li0
\uc0\u48176 \uc0\u50676 \uc0\u51012  \uc0\u51077 \uc0\u47141 \uc0\u48155 \uc0\u50500  output[i]\uc0\u44032  \uc0\u51088 \uc0\u49888 \uc0\u51012  \uc0\u51228 \uc0\u50808 \uc0\u54620  \uc0\u45208 \uc0\u47672 \uc0\u51648  \uc0\u47784 \uc0\u46304  \uc0\u50836 \uc0\u49548 \uc0\u51032  \uc0\u44273 \uc0\u49480  \uc0\u44208 \uc0\u44284 \uc0\u44032  \uc0\u46104 \uc0\u46020 \uc0\u47197  \uc0\u52636 \uc0\u47141 \uc0\u54616 \uc0\u46972 .\
\
Input:  [1,2,3,4]\
Output: [24,12,8,6]\
\
1.\uc0\u50812 \uc0\u51901  \uc0\u44273  * \uc0\u50724 \uc0\u47480 \uc0\u51901  \uc0\u44273 \
class Solution:\
    def productExceptSelf(self, nums: List[int]) -> List[int]:\
        out = []\
        p = 1\
        for i in range(len(nums)):\
            out.append(p)\
            p *= nums[i]\
        p = 1\
        for i in range(len(nums) - 1, -1, -1):\
            out[i] *= p\
            p *= nums[i]\
        return out\
\
\pard\tx0\tx500\tx1000\tx1500\tx2000\tx2500\tx3000\tx3500\tx4000\tx4500\tx5000\tx5500\tx6000\ql\fi-1000\li2000
\ls683032009\ilvl2{\listtext    \uc0\u9656    }\uc0\u50812 \uc0\u51901  \uc0\u44273 \uc0\u44284  \uc0\u50724 \uc0\u47480 \uc0\u51901  \uc0\u44273 \uc0\u51012  \uc0\u54624 \uc0\u46412  \uc0\u54620 \uc0\u52856 \uc0\u50473  \uc0\u48128 \uc0\u47140 \uc0\u45208 \uc0\u44172  \uc0\u54644 \uc0\u49436  \uc0\u51088 \uc0\u49888 \uc0\u51012  \uc0\u51228 \uc0\u50808 \uc0\u54620 \uc0\u45796 .\
\pard\tx0\tx500\tx1000\tx1500\tx2000\tx2500\tx3000\tx3500\tx4000\tx4500\tx5000\tx5500\tx6000\ql\fi0\li0
\
class Solution:\
    def productExceptSelf(self, nums: List[int]) -> List[int]:\
        result = []\
        left = []\
        temp = 1\
        for i in range(len(nums)):\
            left.append(temp)\
            temp *= nums[i]\
        right = []\
        temp = 1\
        for i in range(len(nums) - 1, -1, -1):\
            right.append(temp)\
            temp *= nums[i]\
        right = right[::-1]\
        return [left[i] * right[i] for i in range(len(nums))]\
\
import functools\
\
class Solution:\
    def productExceptSelf(self, nums: List[int]) -> List[int]:\
        left = [1, *nums[:len(nums) - 1]]\
        right = [*nums[1:], 1]\
        for i in range(len(nums) - 1):\
            left[i + 1] = left[i] * left[i + 1]\
            right[len(nums) - i - 2] = right[len(nums) - i - 1] * right[len(nums) - i - 2]\
        return [left[i] * right[i] for i in range(len(nums))]}