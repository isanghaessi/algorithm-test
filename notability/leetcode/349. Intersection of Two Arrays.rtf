{\rtf1\ansi
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;}
{\*\listtable}
{\*\listoverridetable}
\f0\fs24 \cf0 \pard\tx0\tx500\tx1000\tx1500\tx2000\tx2500\tx3000\tx3500\tx4000\tx4500\tx5000\tx5500\tx6000\ql\fi0\li0
\uc0\u46160  \uc0\u48176 \uc0\u50676 \uc0\u51032  \uc0\u44368 \uc0\u51665 \uc0\u54633 \uc0\u51012  \uc0\u44396 \uc0\u54616 \uc0\u46972 .\
\
Input: nums1 = [1,2,2,1], nums2 = [2,2]\
Output: [2]\
\
\
1.\uc0\u48652 \uc0\u47336 \uc0\u53944 \uc0\u54252 \uc0\u49828 \
class Solution:\
    def intersection(self, nums1: List[int], nums2: List[int]) -> List[int]:\
        result = set()\
        for n1 in nums1:\
            for n2 in nums2:\
                if n1 == n2:\
                    result.add(n1)\
        return result\
\
2.\uc0\u51060 \uc0\u51652  \uc0\u44160 \uc0\u49353 \
import bisect\
\
class Solution:\
    def intersection(self, nums1: List[int], nums2: List[int]) -> List[int]:\
        result = set()\
        nums2.sort()\
        for n1 in nums1:\
            i2 = bisect.bisect_left(nums2, n1)\
            if len(nums2) > 0 and len(nums2) > i2 and n1 == nums2[i2]:\
                result.add(n1)\
        return result\
\
3.\uc0\u53804  \uc0\u54252 \uc0\u51064 \uc0\u53552 \
import bisect\
\
class Solution:\
    def intersection(self, nums1: List[int], nums2: List[int]) -> List[int]:\
        result = set()\
        nums1.sort()\
        nums2.sort()\
        i = j = 0\
        while i < len(nums1) and j < len(nums2):\
            if nums1[i] > nums2[j]:\
                j += 1\
            elif nums1[i] < nums2[j]:\
                i += 1\
            else:\
                result.add(nums1[i])\
                i += 1\
                j += 1\
        return result\
\
4.\uc0\u54028 \uc0\u51060 \uc0\u50028  \uc0\u45796 \uc0\u50868 \
class Solution:\
    def intersection(self, nums1: List[int], nums2: List[int]) -> List[int]:\
        return list(set(nums1) & set(nums2))\
\
class Solution:\
    def intersection(self, nums1: List[int], nums2: List[int]) -> List[int]:\
        \
        return list(set([num1 for num1 in nums1 if num1 in nums2]))\
\
\
\
\
\
}