{\rtf1\ansi
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;}
{\*\listtable}
{\*\listoverridetable}
\f0\fs24 \cf0 \pard\tx0\tx500\tx1000\tx1500\tx2000\tx2500\tx3000\tx3500\tx4000\tx4500\tx5000\tx5500\tx6000\ql\fi0\li0
\uc0\u50896 \uc0\u54805 \uc0\u51004 \uc0\u47196  \uc0\u44221 \uc0\u47196 \uc0\u44032  \uc0\u50672 \uc0\u44208 \uc0\u46108  \uc0\u51452 \uc0\u50976 \uc0\u49548  \uc0\u47785 \uc0\u47197 \uc0\u51060  \uc0\u51080 \uc0\u45796 . \uc0\u44033 \uc0\u51452 \uc0\u50976 \uc0\u49548 \uc0\u45716  gas[i]\uc0\u47564 \uc0\u53372 \uc0\u51032  \uc0\u44592 \uc0\u47492 \uc0\u51012  \uc0\u44057 \uc0\u44256  \uc0\u51080 \uc0\u51004 \uc0\u47728 , \uc0\u45796 \uc0\u51020  \uc0\u51452 \uc0\u50976 \uc0\u49548 \uc0\u47196  \uc0\u51060 \uc0\u46041 \uc0\u54616 \uc0\u45716 \uc0\u45936  cost[i]\uc0\u44032  \uc0\u54596 \uc0\u50836 \uc0\u54616 \uc0\u45796 . \uc0\u44592 \uc0\u47492 \uc0\u51060  \uc0\u48512 \uc0\u51313 \uc0\u54616 \uc0\u47732  \uc0\u51060 \uc0\u46041 \uc0\u54624  \uc0\u49688  \uc0\u50630 \uc0\u45796 \uc0\u44256  \uc0\u54624  \uc0\u46412  \uc0\u47784 \uc0\u46304  \uc0\u51452 \uc0\u50976 \uc0\u49548 \uc0\u47484  \uc0\u48169 \uc0\u47928 \uc0\u54624  \uc0\u49688  \uc0\u51080 \uc0\u45716  \uc0\u52636 \uc0\u48156 \uc0\u51216 \uc0\u51032  \uc0\u51064 \uc0\u45937 \uc0\u49828 \uc0\u47484  \uc0\u52636 \uc0\u47141 \uc0\u54616 \uc0\u46972 .\
\uc0\u52636 \uc0\u48156 \uc0\u51216 \uc0\u51060  \uc0\u51316 \uc0\u51116 \uc0\u54616 \uc0\u51648  \uc0\u50506 \uc0\u51012  \uc0\u44221 \uc0\u50864  -1\uc0\u51012  \uc0\u47532 \uc0\u53556 \uc0\u54616 \uc0\u47728 , \uc0\u52636 \uc0\u48156 \uc0\u51216 \uc0\u51008  \uc0\u50976 \uc0\u51068 \uc0\u54616 \uc0\u45796 .\
\
Input: gas = [1,2,3,4,5], cost = [3,4,5,1,2]\
Output: 3\
Explanation:\
Start at station 3 (index 3) and fill up with 4 unit of gas. Your tank = 0 + 4 = 4\
Travel to station 4. Your tank = 4 - 1 + 5 = 8\
Travel to station 0. Your tank = 8 - 2 + 1 = 7\
Travel to station 1. Your tank = 7 - 3 + 2 = 6\
Travel to station 2. Your tank = 6 - 4 + 3 = 5\
Travel to station 3. The cost is 5. Your gas is just enough to travel back to station 3.\
Therefore, return 3 as the starting index.\
\
1.\uc0\u44536 \uc0\u47532 \uc0\u46356 \
class Solution:\
    def canCompleteCircuit(self, gas: List[int], cost: List[int]) -> int:\
        candi = [i for i in range(len(gas)) if gas[i] >= cost[i]]\
        for c in candi:\
            flag = True\
            i = (c + 1) % len(gas)\
            left = gas[c] - cost[c]\
            while i != c:\
                left += gas[i]\
                left -= cost[i]\
                i = (i + 1) % len(gas)\
                if left < 0:\
                    flag = False\
                    break\
            if flag:\
                return c\
        return -1\
\
class Solution:\
    def canCompleteCircuit(self, gas: List[int], cost: List[int]) -> int:\
        for start in range(len(gas)):\
            fuel = 0\
            for i in range(start, len(gas) + start):\
                index = i % len(gas)\
                can_travel = True\
                if gas[index] + fuel < cost[index]:\
                    can_travel = False\
                    break\
                else:\
                    fuel += gas[index] - cost[index]\
            if can_travel:\
                return start\
        return -1\
\
2.\uc0\u44480 \uc0\u47448 \uc0\u48277 \
class Solution:\
    def canCompleteCircuit(self, gas: List[int], cost: List[int]) -> int:\
        if sum(gas) < sum(cost):\
            return -1\
        start, fuel = 0, 0\
        for i in range(len(gas)):\
            if gas[i] + fuel < cost[i]:\
                start = i + 1\
                fuel = 0\
            else:\
                fuel += gas[i] - cost[i]\
        return start\
\
class Solution:\
    def canCompleteCircuit(self, gas: List[int], cost: List[int]) -> int:\
        if sum(gas) - sum(cost) < 0:\
            \
            return -1\
        answer = 0\
        current = 0\
        for i in range(len(gas)):\
            calc_cost = gas[i] - cost[i]\
            if current + calc_cost < 0:\
                current = 0\
                answer = i + 1\
            else:\
                current += calc_cost\
            \
        return answer}