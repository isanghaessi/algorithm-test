{\rtf1\ansi
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;}
{\*\listtable}
{\*\listoverridetable}
\f0\fs24 \cf0 \pard\tx0\tx500\tx1000\tx1500\tx2000\tx2500\tx3000\tx3500\tx4000\tx4500\tx5000\tx5500\tx6000\ql\fi0\li0
\uc0\u45927 \uc0\u49480 \uc0\u54616 \uc0\u50668  \uc0\u53440 \uc0\u44191 \uc0\u51012  \uc0\u47564 \uc0\u46308  \uc0\u49688  \uc0\u51080 \uc0\u45716  \uc0\u48176 \uc0\u50676 \uc0\u51032  \uc0\u46160  \uc0\u49707 \uc0\u51088  \uc0\u51064 \uc0\u45937 \uc0\u49828 \uc0\u47484  \uc0\u47532 \uc0\u53556 \uc0\u54616 \uc0\u46972 .\
\
Input: nums = [2,7,11,15], target = 9\
Output: [0,1]\
\
1.\uc0\u48652 \uc0\u47336 \uc0\u53944  \uc0\u54252 \uc0\u49828 \
def twoSum(mums: List[int], target: int) -> List[int]:\
    for i in range(len(nums)):\
        for j in range(i + 1, len(nums)):\
            if nums[i] + nums[j] == target:\
                return [i, j]\
\
2.\uc0\u48652 \uc0\u47336 \uc0\u53944  \uc0\u54252 \uc0\u49828  + in\
def twoSum(nums: List[int], target: int) -> List[int]:\
    for i, n in enumerate(nums):\
        temp_n = target - n\
        if temp_n in nums[i + 1:]:\
            return [i, nums[i + 1:].index(temp_n) + (i + 1)]\
\
3.\uc0\u46357 \uc0\u49492 \uc0\u45320 \uc0\u47532  \uc0\u54876 \uc0\u50857 \
def twoSum(nums: List[int], target: int) -> List[int]:\
    nums_map = \{\}\
    for i, num in enumerate(nums):\
        nums_map[num] = j\
    for i, num in enumerate(nums):\
        if target - num in nums_map and i != nums_map[target - num]\
        return [nums.index(num), nums_map[target - num]]\
\
def twoSum(nums: List[int], target: int) -> List[int]:\
    nums_map = \{\}\
    for i, num in enumerate(nums):\
        if target - num in nums_map:\
            return [nums_map[target - num], i]\
        nums_map[num] = i\
\
class Solution:\
    def twoSum(self, nums: List[int], target: int) -> List[int]:\
        for i, n in enumerate(nums):\
            nums[i] = ''\
            if target - n in nums:\
                return [i, nums.index(target - n)]\
            nums[i] = n}