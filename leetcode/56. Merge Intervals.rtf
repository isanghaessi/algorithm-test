{\rtf1\ansi
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;}
{\*\listtable}
{\*\listoverridetable}
\f0\fs24 \cf0 \pard\tx0\tx500\tx1000\tx1500\tx2000\tx2500\tx3000\tx3500\tx4000\tx4500\tx5000\tx5500\tx6000\ql\fi0\li0
\uc0\u44217 \uc0\u52824 \uc0\u45716  \uc0\u44396 \uc0\u44036 \uc0\u51012  \uc0\u48337 \uc0\u54633 \uc0\u54616 \uc0\u46972 .\
\
Input: intervals = [[1,3],[2,6],[8,10],[15,18]]\
Output: [[1,6],[8,10],[15,18]]\
\
1.\uc0\u51221 \uc0\u47148  \uc0\u54980  \uc0\u51665 \uc0\u54633  \uc0\u54876 \uc0\u50857 \
class Solution:\
    def merge(self, intervals: List[List[int]]) -> List[List[int]]:\
         intervals.sort(key = lambda x:x[0])\
        for i in range(len(intervals) - 1):\
            left = set(range(intervals[i][0], intervals[i][1] + 1))\
            right = set(range(intervals[i + 1][0], intervals[i + 1][1] + 1))\
            if left & right:\
                intervals[i + 1] = [min(left | right), max(left | right)]\
                intervals[i] = None\
        return [i for i in intervals if i != None]\
\
\
2. \uc0\u51221 \uc0\u47148  \uc0\u54980  \uc0\u48708 \uc0\u44368 \
class Solution:\
    def merge(self, intervals: List[List[int]]) -> List[List[int]]:\
        merged = []\
        for i in sorted(intervals, key=lambda x: x[0]):\
            if merged and i[0] <= merged[-1][1]:\
                merged[-1][1] = max(merged[-1][1], i[1])\
            else:\
                merged += i,\
        return merged\
\
class Solution:\
    def merge(self, intervals: List[List[int]]) -> List[List[int]]:\
        intervals.sort(key = lambda a: a[0])\
        answer = []\
        i = 0\
        while i < len(intervals):\
            fr, to = intervals[i]\
            for j in range(i, len(intervals)):\
                if intervals[j][0] <= to:\
                    to = max(to, intervals[j][1])\
                    i = j + 1\
                else:\
                    \
                    break\
            answer.append([fr, to])\
            \
        return answer\
                \
            \
}