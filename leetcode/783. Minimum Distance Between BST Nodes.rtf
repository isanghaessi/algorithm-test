{\rtf1\ansi
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc23\levelnfcn23{\*\levelmarker \{disc\}}{\leveltext \'01\'95}{\levelnumbers;}\fi-500\li0\lin0}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc23\levelnfcn23{\*\levelmarker \{circle\}}{\leveltext \'01\uc0\u9702 _;}{\levelnumbers;}\fi-500\li500\lin500}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc23\levelnfcn23{\*\levelmarker \{diamond\}}{\leveltext \'01\uc0\u9656 _;}{\levelnumbers;}\fi-500\li1000\lin1000}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc23\levelnfcn23{\*\levelmarker \{disc\}}{\leveltext \'01\'95}{\levelnumbers;}\fi-500\li1500\lin1500}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc23\levelnfcn23{\*\levelmarker \{circle\}}{\leveltext \'01\uc0\u9702 _;}{\levelnumbers;}\fi-500\li2000\lin2000}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc23\levelnfcn23{\*\levelmarker \{diamond\}}{\leveltext \'01\uc0\u9656 _;}{\levelnumbers;}\fi-500\li2500\lin2500}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc23\levelnfcn23{\*\levelmarker \{disc\}}{\leveltext \'01\'95}{\levelnumbers;}\fi-500\li3000\lin3000}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc23\levelnfcn23{\*\levelmarker \{circle\}}{\leveltext \'01\uc0\u9702 _;}{\levelnumbers;}\fi-500\li3500\lin3500}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc23\levelnfcn23{\*\levelmarker \{diamond\}}{\leveltext \'01\uc0\u9656 _;}{\levelnumbers;}\fi-500\li4000\lin4000}
{\listname ;}\listid447999380}
{\list\listtemplateid2\listhybrid{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc23\levelnfcn23{\*\levelmarker \{disc\}}{\leveltext \'01\'95}{\levelnumbers;}\fi-500\li0\lin0}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc23\levelnfcn23{\*\levelmarker \{circle\}}{\leveltext \'01\uc0\u9702 _;}{\levelnumbers;}\fi-500\li500\lin500}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc23\levelnfcn23{\*\levelmarker \{diamond\}}{\leveltext \'01\uc0\u9656 _;}{\levelnumbers;}\fi-500\li1000\lin1000}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc23\levelnfcn23{\*\levelmarker \{disc\}}{\leveltext \'01\'95}{\levelnumbers;}\fi-500\li1500\lin1500}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc23\levelnfcn23{\*\levelmarker \{circle\}}{\leveltext \'01\uc0\u9702 _;}{\levelnumbers;}\fi-500\li2000\lin2000}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc23\levelnfcn23{\*\levelmarker \{diamond\}}{\leveltext \'01\uc0\u9656 _;}{\levelnumbers;}\fi-500\li2500\lin2500}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc23\levelnfcn23{\*\levelmarker \{disc\}}{\leveltext \'01\'95}{\levelnumbers;}\fi-500\li3000\lin3000}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc23\levelnfcn23{\*\levelmarker \{circle\}}{\leveltext \'01\uc0\u9702 _;}{\levelnumbers;}\fi-500\li3500\lin3500}
{\listlevel\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0\levelnfc23\levelnfcn23{\*\levelmarker \{diamond\}}{\leveltext \'01\uc0\u9656 _;}{\levelnumbers;}\fi-500\li4000\lin4000}
{\listname ;}\listid-1953455928}
}
{\*\listoverridetable{\listoverride\listid-1953455928\listoverridecount0\ls-1953455928}{\listoverride\listid447999380\listoverridecount0\ls447999380}}
\f0\fs24 \cf0 \pard\tx0\tx500\tx1000\tx1500\tx2000\tx2500\tx3000\tx3500\tx4000\tx4500\tx5000\tx5500\tx6000\ql\fi0\li0
\uc0\u46160  \uc0\u45432 \uc0\u46300  \uc0\u44036  \uc0\u44050 \uc0\u51032  \uc0\u52264 \uc0\u51060 \uc0\u44032  \uc0\u44032 \uc0\u51109  \uc0\u51089 \uc0\u51008  \uc0\u45432 \uc0\u46300 \uc0\u51032  \uc0\u44050 \uc0\u51032  \uc0\u52264 \uc0\u51060 \uc0\u47484  \uc0\u52636 \uc0\u47141 \uc0\u54616 \uc0\u46972 .\
\
Input: nums = [-2,1,-3,4,-1,2,1,-5,4]\
Output: 6\
\
1.\uc0\u47532 \uc0\u49828 \uc0\u53944 \uc0\u47196  \uc0\u48320 \uc0\u54872 \
import sys\
\
class Solution:\
    def minDiffInBST(self, root: TreeNode) -> int:\
        def preOrder(node):\
            if node == None:\
                return\
            preOrder(node.left)\
            self.arr.append(node.val)\
            preOrder(node.right)\
        \
        result = sys.maxsize\
        self.arr = []\
        preOrder(root)\
        self.arr.sort()\
        for i in range(len(self.arr) - 1):\
            dif = abs(self.arr[i] - self.arr[i + 1])\
            if dif < result:\
                result = dif\
        return result\
\
2.\uc0\u51473 \uc0\u50948  \uc0\u49692 \uc0\u54924 \
import sys\
\
class Solution:\
    prev = -sys.maxsize\
    result = sys.maxsize\
    \
    def minDiffInBST(self, root: TreeNode) -> int:\
        if root.left:\
            self.minDiffInBST(root.left)\
        self.result = min(self.result, root.val - self.prev)\
        self.prev = root.val\
        if root.right:\
            self.minDiffInBST(root.right)\
        return self.result\
\
\pard\tx0\tx500\tx1000\tx1500\tx2000\tx2500\tx3000\tx3500\tx4000\tx4500\tx5000\tx5500\tx6000\ql\fi-1000\li2000
\ls447999380\ilvl2{\listtext    \uc0\u9656    }\uc0\u51116 \uc0\u44480 \
\pard\tx0\tx500\tx1000\tx1500\tx2000\tx2500\tx3000\tx3500\tx4000\tx4500\tx5000\tx5500\tx6000\ql\fi0\li0
\
import sys\
\
class Solution:\
    def minDiffInBST(self, root: TreeNode) -> int:\
        prev = -sys.maxsize\
        result = sys.maxsize\
        stack = []\
        node = root\
        while stack or node:\
            while node:\
                stack.append(node)\
                node = node.left\
            node = stack.pop()\
            result = min(result, node.val - prev)\
            prev = node.val\
            node = node.right\
        return result\
\
\pard\tx0\tx500\tx1000\tx1500\tx2000\tx2500\tx3000\tx3500\tx4000\tx4500\tx5000\tx5500\tx6000\ql\fi-1000\li2000
\ls-1953455928\ilvl2{\listtext    \uc0\u9656    }\uc0\u48152 \uc0\u48373 \
\pard\tx0\tx500\tx1000\tx1500\tx2000\tx2500\tx3000\tx3500\tx4000\tx4500\tx5000\tx5500\tx6000\ql\fi0\li0
\
# Definition for a binary tree node.\
# class TreeNode:\
#     def __init__(self, val=0, left=None, right=None):\
#         self.val = val\
#         self.left = left\
#         self.right = right\
class Solution:\
    def minDiffInBST(self, root: Optional[TreeNode]) -> int:\
        def pre_order(node, min_val, max_val):\
            nonlocal answer\
            \
            if not node:\
                \
                return min_val, max_val\
            lmin_val, lmax_val = pre_order(node.left, node.val, node.val)\
            rmin_val, rmax_val = pre_order(node.right, node.val, node.val)\
            if lmax_val < node.val:\
                answer = min(answer, node.val - lmax_val)\
            if rmin_val > node.val:\
                answer = min(answer, rmin_val - node.val)\
            \
            return lmin_val, rmax_val\
        \
        \
        answer = float('inf')\
        pre_order(root, root.val, root.val)\
        \
        return answer\
            \
# Definition for a binary tree node.\
# class TreeNode:\
#     def __init__(self, val=0, left=None, right=None):\
#         self.val = val\
#         self.left = left\
#         self.right = right\
class Solution:\
    def minDiffInBST(self, root: Optional[TreeNode]) -> int:\
        def in_order(node):\
            nonlocal answer\
            nonlocal prev_val\
            \
            if not node:\
                \
                return\
            in_order(node.left)\
            answer = min(answer, abs(node.val - prev_val))\
            prev_val = node.val\
            in_order(node.right)\
            \
        \
        answer = float('inf')\
        prev_val = float('inf')\
        in_order(root)\
        \
        return answer\
            \
\
\
\
\
}