{\rtf1\ansi
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;}
{\*\listtable}
{\*\listoverridetable}
\f0\fs24 \cf0 \pard\tx0\tx500\tx1000\tx1500\tx2000\tx2500\tx3000\tx3500\tx4000\tx4500\tx5000\tx5500\tx6000\ql\fi0\li0
\uc0\u47928 \uc0\u51088 \uc0\u50676  \uc0\u48176 \uc0\u50676 \uc0\u51012  \uc0\u48155 \uc0\u50500  \uc0\u50528 \uc0\u45320 \uc0\u44536 \uc0\u47016  \uc0\u45800 \uc0\u50948 \uc0\u47196  \uc0\u44536 \uc0\u47353 \uc0\u54609 \uc0\u54616 \uc0\u46972 .\
\
Input: strs = ["eat","tea","tan","ate","nat","bat"]\
Output: [["bat"],["nat","tan"],["ate","eat","tea"]]\
\
\
1.\uc0\u51221 \uc0\u47148 \uc0\u54616 \uc0\u50668  \uc0\u46357 \uc0\u49492 \uc0\u45320 \uc0\u47532 \uc0\u50640  \uc0\u52628 \uc0\u44032 \
def groupAnagrams(strs: List[str]) -> List[List[str]]:\
    anagrams = collections.defaultdict(list)\
    for word in strs:\
        anagrams[''.join(sorted(word))].append(word)\
    return anagrams.values()\
\
    \uc0\u8227  sorted\uc0\u45716  \uc0\u47532 \uc0\u49828 \uc0\u53944 \uc0\u47484  \uc0\u48152 \uc0\u54872 \uc0\u54616 \uc0\u48064 \uc0\u47196  \uc0\u51452 \uc0\u51032 \uc0\u54616 \uc0\u51088 .\
\
import collections\
\
class Solution:\
    def groupAnagrams(self, strs: List[str]) -> List[List[str]]:\
        result = collections.defaultdict(list)\
        for s in strs:\
            result[tuple(sorted(s))].append(s)\
        return result.values()\
\
\
\
\
\
\
\
\
\
\
\
\
\
}