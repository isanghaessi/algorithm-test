{\rtf1\ansi
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;}
{\*\listtable}
{\*\listoverridetable}
\f0\fs24 \cf0 \pard\tx0\tx500\tx1000\tx1500\tx2000\tx2500\tx3000\tx3500\tx4000\tx4500\tx5000\tx5500\tx6000\ql\fi0\li0
\uc0\u54633 \uc0\u51060  \uc0\u52572 \uc0\u45824 \uc0\u44032  \uc0\u46104 \uc0\u45716  \uc0\u50672 \uc0\u49549  \uc0\u49436 \uc0\u48652  \uc0\u48176 \uc0\u50676 \uc0\u51012  \uc0\u52286 \uc0\u50500  \uc0\u54633 \uc0\u51012  \uc0\u47532 \uc0\u53556 \uc0\u54616 \uc0\u46972 .\
\
Input: nums = [-2,1,-3,4,-1,2,1,-5,4]\
Output: 6\
Explanation: [4,-1,2,1] has the largest sum = 6.\
\
\
1.\uc0\u45796 \uc0\u51060 \uc0\u45208 \uc0\u48121  \uc0\u54532 \uc0\u47196 \uc0\u44536 \uc0\u47000 \uc0\u48141 \
class Solution:\
    def maxSubArray(self, nums: List[int]) -> int:\
        for i in range(1, len(nums)):\
            nums[i] += nums[i - 1] if nums[i - 1] > 0 else 0\
        return max(nums)\
\
2.\uc0\u52852 \uc0\u45936 \uc0\u51064  \uc0\u50508 \uc0\u44256 \uc0\u47532 \uc0\u51608 \
import sys\
\
class Solution:\
    def maxSubArray(self, nums: List[int]) -> int:\
        best_sum = -sys.maxsize\
        current_sum = 0\
        for num in nums:\
            current_sum = max(num, current_sum + num)\
            best_sum = max(best_sum, current_sum)\
        return best_sum\
\
class Solution:\
    def maxSubArray(self, nums: List[int]) -> int:\
        sums = [float('-inf')]\
        for i in range(len(nums)):\
            sums.append(sums[i] + nums[i] if sums[i] > 0 else nums[i])\
            \
        return max(sums)\
\
class Solution:\
    def maxSubArray(self, nums: List[int]) -> int:\
        for i in range(1, len(nums)):\
            nums[i] = nums[i - 1] + nums[i] if nums[i - 1] > 0 else nums[i]\
            \
        return max(nums)}