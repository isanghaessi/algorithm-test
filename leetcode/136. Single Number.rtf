{\rtf1\ansi
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;}
{\*\listtable}
{\*\listoverridetable}
\f0\fs24 \cf0 \pard\tx0\tx500\tx1000\tx1500\tx2000\tx2500\tx3000\tx3500\tx4000\tx4500\tx5000\tx5500\tx6000\ql\fi0\li0
\uc0\u46385  \uc0\u54616 \uc0\u45208 \uc0\u47484  \uc0\u51228 \uc0\u50808 \uc0\u54616 \uc0\u44256  \uc0\u47784 \uc0\u46304  \uc0\u50648 \uc0\u47532 \uc0\u47676 \uc0\u53944 \uc0\u45716  2\uc0\u44060 \uc0\u50473  \uc0\u51080 \uc0\u45796 . 1\uc0\u44060 \uc0\u51064  \uc0\u50648 \uc0\u47532 \uc0\u47676 \uc0\u53944 \uc0\u47484  \uc0\u52286 \uc0\u50500 \uc0\u46972 .\
\
Input: nums = [2,2,1]\
Output: 1\
\
1.\uc0\u48708 \uc0\u53944  \uc0\u50672 \uc0\u49328  xor\
class Solution:\
    def singleNumber(self, nums: List[int]) -> int:\
        result = 0\
        for num in nums:\
            result ^= num\
        return result\
\
class Solution:\
    def singleNumber(self, nums: List[int]) -> int:\
        result = []\
        for num in nums:\
            if num in result:\
                result.remove(num)\
            else:\
                result.append(num)\
            \
        return result[0]}